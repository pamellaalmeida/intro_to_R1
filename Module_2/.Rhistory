knitr::opts_chunk$set(echo = TRUE)
library(gutenbergr)
knitr::include_graphics("./images/02.png")
unlink('01_Gutemberg_cache', recursive = TRUE)
?install.packages
install.packages('gutenbergr', dependencies=TRUE)
remove.packages("gutenbergr")
library(gutenbergr)
library(ggplot2)
library(dplyr)
library(tidytext)
?install.packages()
knitr::opts_chunk$set(echo = TRUE)
library(gutenbergr)
library(ggplot2)
library(dplyr)
library(tidytext)
M.0  <- gutenberg_download(54829)
View(M.0)
View(M.0)
View(M.0)
View(M.0)
M.1 <- M.0 %>%
mutate(text=iconv(text, from = "latin1", to = "UTF-8"))
head(M.1)
View(M.1)
length(M.1)
View(M.1)
length(M.0)
View(M.1)
M.1$gutenberg_id<-NULL
which(M.1== "CAPITULO I")
inicio <- which(M.1== "CAPITULO I")
M.1.linhas <- M.1[inicio:fim]
fim <- which(M.1 == "FIM")
M.1.linhas <- M.1[inicio:fim]
M.1 <- M.0 %>%
mutate(text=iconv(text, from = "latin1", to = "UTF-8"))
which(M.1== "CAPITULO I")
inicio <- which(M.1== "CAPITULO I")
fim <- which(M.1 == "FIM")
M.1.linhas <- M.1[inicio:fim]
M.1 <- M.1$text
which(M.1== "CAPITULO I")
which(M.1== "CAPITULO I")
inicio <- which(M.1== "CAPITULO I")
which(M.1 == "FIM")
fim <- which(M.1 == "FIM")
M.1.linhas <- M.1[inicio:fim]
M1.C <- paste(M.1.linhas, collapse=" ")
length(M1.C)
M1.C <- paste(M.1.linhas, collapse=" ")
length(M1.C)
M1.CB <- tolower(M1.C)
M1.l <- strsplit(M1.CB, "\\W")
M1.l.v <- unlist(M1.l)
View(M1.l.v)
typeof(M1.l.v)
head(M.0)
##Identifies which positions are empty
not.blanks <- which(M1.l.v!="")
# Deletes the empty positions
M1.l.v <- M1.l.v[not.blanks]
mypositions.v <- c(400,125,621)
mypositions.v <- c(400,125,621)
M1.l.v[mypositions.v]
M1.l.v[1:30]
M1.l.v[c(1,2,4)]
M1.l.v[c(1,2,3)]
marcella.f <- which(M1.l.v=='marcella')
marcella.f
marcella.f <- which(M1.l.v=='marcella')
lenght(marcella.f)
marcella.f <- which(M1.l.v=='marcella')
length(marcella.f)
marcella.f
plot(marcella.f)
?plot
plot(marcella.f,type=h)
plot(marcella.f,type=h)
plot(marcella.f,type='h')
plot(marcella.f,type='b')
View(marcella.f)
plot(x=marcella.f,type='h')
plot(x=marcella.f,y=null,type='h')
plot(marcella.f)
plot(marcella.f,type = "h")
m.freqs.t<-table(M1.l.v)
View(m.freqs.t)
sorted.m.freqs.t <- sort(m.freqs.t, decreasing=TRUE)
sorted.m.freqs.t <- sort(m.freqs.t, decreasing=TRUE)
head(sorted.m.freqs.t,10)
n.time.v <- seq(1:length(M1.l.v))
w.count.v <- rep(NA,length(n.time.v))
rm(n.time.v)
w.count.v <- rep(NA,length(M1.l.v))
n.time.v <- seq(1:length(M1.l.v))
w.count.v <- rep(NA,length(n.time.v))
w.count.v <- rep(NA,length(M1.l.v))
w.count.v[marcella.f] <- 1
w.count.v[marcella.f] <- 1
View(w.count.v)
plot(w.count.v, main="Ocorrências de Marcella",
xlab="Novel Time", ylab="Marcella", type="h", ylim=c(0,1), yaxt='n')
plot(marcella.f)
setwd("/Volumes/GoogleDrive/My Drive/Profissional/Pedagogico/UNICAMP/disciplinas/pos/R/lp192/intro_to_R1/Module_2")
library(tidyverse)
stopwords <- read_csv('stop_port2.csv')
head(stopwords, 10)
word_list <-
tibble(text = M1.CB) %>%
mutate(text = tolower(text)) %>%
mutate(text = str_remove_all(text, '[[:punct:]]')) %>%
mutate(tokens = str_split(text, '\\s+')) %>%
unnest() %>%
count(tokens) %>%
filter(!tokens %in% stopwords$tokens) %>%
mutate(freq = n / sum(n)) %>%
arrange(desc(n))
geral.list.df <- data.frame(text = M1.CB, stringsAsFactors = F)
View(geral.list.df)
library(tidytext)
library(tidyr)
library(dplyr)
geral.list.df <- data.frame(text = M1.CB, stringsAsFactors = F)
geral.list <- geral.list.df %>%
unnest_tokens(word, text) %>%
count(word, sort = TRUE) %>%
anti_join(my.stopwords)%>%
mutate(freq = n / sum(n)) %>%
arrange(desc(n))
my.stopwords <- read_csv('stop_port2.csv')
head(my.stopwords, 10)
library(tidytext)
library(tidyr)
library(dplyr)
geral.list.df <- data.frame(text = M1.CB, stringsAsFactors = F)
geral.list <- geral.list.df %>%
unnest_tokens(word, text) %>%
count(word, sort = TRUE) %>%
anti_join(my.stopwords)%>%
mutate(freq = n / sum(n)) %>%
arrange(desc(n))
library(tidytext)
library(tidyr)
library(dplyr)
geral.list.df <- data.frame(text = M1.CB, stringsAsFactors = F)
geral.list <- geral.list.df %>%
unnest_tokens(word, text)
library(tidytext)
library(tidyr)
library(dplyr)
geral.list.df <- data.frame(text = M1.CB, stringsAsFactors = F)
geral.list <- geral.list.df %>%
unnest_tokens(word, text) %>%
count(word, sort = TRUE)
View(geral.list)
library(tidytext)
library(tidyr)
library(dplyr)
geral.list.df <- data.frame(text = M1.CB, stringsAsFactors = F)
geral.list <- geral.list.df %>%
unnest_tokens(word, text) %>%
count(word, sort = TRUE) %>%
anti_join(my.stopwords)
library(tidytext)
library(tidyr)
library(dplyr)
geral.list.df <- data.frame(text = M1.CB, stringsAsFactors = F)
geral.list <- geral.list.df %>%
unnest_tokens(word, text) %>%
count(word, sort = TRUE) %>%
anti_join(data.frame(my.stopwords))
?anti_join
?filter
library(tidytext)
library(tidyr)
library(dplyr)
geral.list.df <- data.frame(text = M1.CB, stringsAsFactors = F)
geral.list <- geral.list.df %>%
unnest_tokens(word, text) %>%
count(word, sort = TRUE) %>%
filter(!my.stopwords)%>%
mutate(freq = n / sum(n)) %>%
arrange(desc(n))
library(tidytext)
library(tidyr)
library(dplyr)
geral.list.df <- data.frame(text = M1.CB, stringsAsFactors = F)
geral.list <- geral.list.df %>%
unnest_tokens(word, text) %>%
count(word, sort = TRUE) %>%
filter(!= my.stopwords)%>%
library(tidytext)
library(tidyr)
library(dplyr)
geral.list.df <- data.frame(text = M1.CB, stringsAsFactors = F)
geral.list <- geral.list.df %>%
unnest_tokens(word, text) %>%
count(word, sort = TRUE) %>%
filter(geral.list$text != my.stopwords)%>%
mutate(freq = n / sum(n)) %>%
arrange(desc(n))
library(tidytext)
library(tidyr)
library(dplyr)
geral.list.df <- data.frame(text = M1.CB, stringsAsFactors = F)
geral.list <- geral.list.df %>%
unnest_tokens(word, text) %>%
count(word, sort = TRUE) %>%
anti_join(geral.list$text, my.stopwords)%>%
mutate(freq = n / sum(n)) %>%
arrange(desc(n))
library(tidytext)
library(tidyr)
library(dplyr)
geral.list.df <- data.frame(text = M1.CB, stringsAsFactors = F)
geral.list <- geral.list.df %>%
unnest_tokens(word, text) %>%
count(word, sort = TRUE) %>%
anti_join(geral.list$text, my.stopwords,copy` = TRUE)%>%
mutate(freq = n / sum(n)) %>%
arrange(desc(n))
library(tidytext)
library(tidyr)
library(dplyr)
geral.list.df <- data.frame(text = M1.CB, stringsAsFactors = F)
geral.list <- geral.list.df %>%
unnest_tokens(word, text) %>%
count(word, sort = TRUE) %>%
anti_join(geral.list$text, my.stopwords,copy = TRUE)%>%
mutate(freq = n / sum(n)) %>%
arrange(desc(n))
View(my.stopwords)
my.stopwords <- read_csv("stop_port2.csv", col_names = FALSE)
colnames(my.stopwords)<-'words'
head(my.stopwords, 10)
View(geral.list)
my.stopwords <- read_csv("stop_port2.csv", col_names = FALSE)
colnames(my.stopwords)<-'word'
head(my.stopwords, 10)
library(tidytext)
library(tidyr)
library(dplyr)
geral.list.df <- data.frame(text = M1.CB, stringsAsFactors = F)
geral.list <- geral.list.df %>%
unnest_tokens(word, text) %>%
count(word, sort = TRUE) %>%
anti_join(mystopwords, by= "word")%>%
mutate(freq = n / sum(n)) %>%
arrange(desc(n))
library(tidytext)
library(tidyr)
library(dplyr)
geral.list.df <- data.frame(text = M1.CB, stringsAsFactors = F)
geral.list <- geral.list.df %>%
unnest_tokens(word, text) %>%
count(word, sort = TRUE) %>%
anti_join(my.stopwords, by= "word")%>%
mutate(freq = n / sum(n)) %>%
arrange(desc(n))
View(geral.list)
library(tidytext)
library(tidyr)
library(dplyr)
geral.list.df <- data.frame(text = M1.CB, stringsAsFactors = F)
geral.list <- geral.list.df %>%
unnest_tokens(word, text) %>%
count(word, sort = TRUE) %>%
anti_join(my.stopwords, by= "word")%>%
mutate((freq = n / sum(n))*100) %>%
arrange(desc(n))
colnames(geral.list)<-c('word','n','freq')
View(geral.list)
library(tidytext)
library(tidyr)
library(dplyr)
geral.list.df <- data.frame(text = M1.CB, stringsAsFactors = F)
geral.list <- geral.list.df %>%
unnest_tokens(word, text) %>%
count(word, sort = TRUE) %>%
anti_join(my.stopwords, by= "word")%>%
mutate((freq = n / sum(n))*100) %>%
arrange(desc(n))
colnames(geral.list)<-c('word','n','freq')
View(geral.list)
library(tidytext)
library(tidyr)
library(dplyr)
geral.list.df <- data.frame(text = M1.CB, stringsAsFactors = F)
geral.list <- geral.list.df %>%
unnest_tokens(word, text) %>%
count(word, sort = TRUE) %>%
anti_join(my.stopwords, by= "word")%>%
mutate(freq = n / sum(n)) %>%
arrange(desc(n))
View(geral.list)
geral.list %>%
mutate(word = fct_reorder(word, freq)) %>%
slice(1:30) %>%
ggplot(., aes(x=word, y=freq))+
geom_point(size=3) +
geom_segment(aes(x=word,
xend=word,
y=0,
yend=freq)) +
labs(title="Lollipop Chart",
subtitle="Tokens Vs Frequency",
caption="Memórias Póstumas de Braz Cubas") +
theme(axis.text.x = element_text(angle=65, vjust=0.6))
View(geral.list)
new <- data.frame(c("às","à", "ella","elle"))
View(new)
colnames(new)<-'word'
new <- data.frame(c("às","à", "ella","elle","d"))
colnames(new)<-'word'
View(new)
new <- data.frame(c("às","à", "ella","elle","d"))
colnames(new)<-'word'
my.stopwords<-rbind(my.stopwords,new)
View(my.stopwords)
geral.list <- geral.list.df %>%
unnest_tokens(word, text) %>%
count(word, sort = TRUE) %>%
anti_join(my.stopwords, by= "word")%>%
mutate((freq = n / sum(n))*100) %>%
arrange(desc(n))
colnames(geral.list)<-c('word','n','freq')
View(geral.list)
geral.list %>%
mutate(word = fct_reorder(word, freq)) %>%
slice(1:30) %>%
ggplot(., aes(x=word, y=freq))+
geom_point(size=3) +
geom_segment(aes(x=word,
xend=word,
y=0,
yend=freq)) +
labs(title="Lollipop Chart",
subtitle="Tokens Vs Frequency",
caption="Memórias Póstumas de Braz Cubas") +
theme(axis.text.x = element_text(angle=65, vjust=0.6))
library(tidytext)
library(tidyr)
library(dplyr)
geral.list.df <- data.frame(text = M1.CB, stringsAsFactors = F)
geral.list <- geral.list.df %>%
unnest_tokens(word, text) %>%
count(word, sort = TRUE) %>%
anti_join(my.stopwords, by= "word")%>%
mutate((freq = n / sum(n))*100) %>%
arrange(desc(n))
colnames(geral.list)<-c('word','n','freq')
library(readr)
my.stopwords <- read_csv("stop_port2.csv", col_names = FALSE)
library(tidytext)
library(tidyr)
library(dplyr)
geral.list.df <- data.frame(text = M1.CB, stringsAsFactors = F)
geral.list <- geral.list.df %>%
unnest_tokens(word, text) %>%
count(word, sort = TRUE) %>%
anti_join(my.stopwords, by= "word")%>%
mutate((freq = n / sum(n))*100) %>%
arrange(desc(n))
View(my.stopwords)
library(readr)
my.stopwords <- read_csv("stop_port2.csv", col_names = FALSE)
colnames(my.stopwords)<-"words"
library(readr)
my.stopwords <- read_csv("stop_port2.csv", col_names = FALSE)
colnames(my.stopwords)<-"word"
?fct_reorder
